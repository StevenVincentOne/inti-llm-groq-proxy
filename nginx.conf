user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # DNS resolver with IPv4 only to fix IPv6 connection issues
    resolver 1.1.1.1 8.8.8.8 ipv6=off valid=300s;
    resolver_timeout 10s;

    # Upstream definition for better connection management
    upstream groq_api {
        server api.groq.com:443;
        keepalive 10;
        keepalive_timeout 60s;
        keepalive_requests 100;
    }

    server {
        listen 8080;
        server_name _;

        # Health endpoint for service discovery
        location /api/build_info {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status":"ok","service":"llm-groq-proxy","version":"v1.2"}';
        }

        # Proxy all /v1/* requests to Groq API
        location /v1/ {
            # Use variable to force DNS resolution and avoid IPv6 issues
            set $groq_upstream "https://api.groq.com";
            proxy_pass $groq_upstream/openai$uri$is_args$args;
            
            # SSL settings
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
            proxy_ssl_session_reuse on;
            
            # Headers
            proxy_set_header Host api.groq.com;
            proxy_set_header User-Agent "Inti-LLM-Proxy/1.2";
            proxy_set_header Accept-Encoding "";
            proxy_set_header Connection "";
            
            # Add Authorization header from environment variable
            proxy_set_header Authorization "Bearer $groq_api_key";
            
            # Timeout settings
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Error handling
            proxy_intercept_errors off;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 30s;
            
            # Logging
            access_log /var/log/nginx/groq_access.log main;
            error_log /var/log/nginx/groq_error.log;
        }

        # Default location for health checks
        location / {
            access_log off;
            add_header Content-Type application/json;
            return 200 '{"status":"ok","service":"llm-groq-proxy"}';
        }

        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            add_header Content-Type application/json;
            return 500 '{"error":"upstream_error","message":"LLM service temporarily unavailable"}';
        }
    }
}